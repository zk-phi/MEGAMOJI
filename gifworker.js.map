{"version":3,"file":"gifworker.js","mappings":"0BAAA,IAAIA,EAAYC,OAAOC,eACUF,EAOlBG,EAPoC,aAAc,CAACC,OAAO,IAC1D,EAACC,EAAQC,KACtB,IAAK,IAAIC,KAAQD,EACfN,EAAUK,EAAQE,EAAM,CAACC,IAAKF,EAAIC,GAAOE,YAAY,GAAM,EAK/DC,CAASP,EAAS,CAChBQ,WAAY,IAAMA,EAClBC,aAAc,IAAMA,EACpBC,QAAS,IAAMC,EACfC,aAAc,IAAMA,EACpBC,kBAAmB,IAAMA,EACzBC,8BAA+B,IAAMA,EACrCC,YAAa,IAAMA,EACnBC,SAAU,IAAMA,EAChBC,oBAAqB,IAAMA,IAI7B,IAAIC,EAAoB,CACtBC,UAAW,MACXC,QAAS,MACTC,QAAS,GACTC,oBAAqB,GACrBC,0BAA2B,IAC3BC,6BAA8B,IAC9BC,eAAgB,GAChBC,cAAe,EACfC,YAAa,EACbC,yBAA0B,IAC1BC,oBAAqB,IACrBC,aAAc,EACdC,yBAA0B,EAC1BC,0BAA2B,EAC3BC,wBAAyB,EACzBC,mBAAoB,GACpBC,kBAAmB,EACnBC,yBAA0B,EAC1BC,wBAAyB,IACzBC,kBAAmB,GACnBC,eAAgB,GAChBC,wBAAyB,GAI3B,SAASC,EAAaC,EAAkB,KACtC,IAAIC,EAAS,EACTC,EAAW,IAAIC,WAAWH,GAC9B,MAAO,CACDI,aACF,OAAOF,EAASE,MAClB,EACAC,QACEJ,EAAS,CACX,EACAK,UAAS,IACAJ,EAASK,SAAS,EAAGN,GAE9BO,MAAK,IACIN,EAASO,MAAM,EAAGR,GAE3BS,UAAUC,GACRC,EAAOX,EAAS,GAChBC,EAASD,GAAUU,EACnBV,GACF,EACAY,WAAWC,EAAMC,EAAS,EAAGC,EAAaF,EAAKG,QAC7CL,EAAOX,EAASe,GAChB,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAYE,IAC9BhB,EAASD,KAAYa,EAAKI,EAAIH,EAElC,EACAI,eAAeL,EAAMC,EAAS,EAAGC,EAAaF,EAAKE,YACjDJ,EAAOX,EAASe,GAChBd,EAASkB,IAAIN,EAAKP,SAASQ,EAAQA,EAASC,GAAaf,GACzDA,GAAUe,CACZ,GAEF,SAASJ,EAAOS,GACd,IAAIC,EAAepB,EAASe,OAC5B,GAAIK,GAAgBD,EAClB,OAEFA,EAAcE,KAAKC,IAAIH,EAAaC,GAAgBA,EADxB,QAC+D,EAAI,SAAW,GACtF,GAAhBA,IACFD,EAAcE,KAAKC,IAAIH,EAAa,MACtC,MAAMI,EAAcvB,EACpBA,EAAW,IAAIC,WAAWkB,GACtBpB,EAAS,GACXC,EAASkB,IAAIK,EAAYlB,SAAS,EAAGN,GAAS,EAClD,CACF,CAGA,IAAIyB,EAAO,GAEPC,EAAQ,CACV,EACA,EACA,EACA,EACA,GACA,GACA,GACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,MACA,MACA,OA8GEC,EA5GJ,SAAmBC,EAAOC,EAAQC,EAAQC,EAAYC,EAAYlC,EAAa,KAAMmC,EAAQ,IAAI/B,WAAW,KAAMgC,EAAO,IAAIC,WApBzG,MAoBoIC,EAAU,IAAID,WApBlJ,OAqBlB,MAAME,EAAQH,EAAKlB,OACbsB,EAAehB,KAAKC,IAAI,EAAGQ,GACjCE,EAAMM,KAAK,GACXH,EAAQG,KAAK,GACbL,EAAKK,MAAM,GACX,IAAIC,EAAY,EACZC,EAAW,EACf,MAAMC,EAAYJ,EAAe,EAC3BK,EAAcD,EACpB,IAAIE,GAAY,EACZC,EAASF,EACTG,GAAW,GAAKD,GAAU,EAC9B,MAAME,EAAY,GAAKL,EAAY,EAC7BM,EAAUD,EAAY,EAC5B,IAAIE,EAAWF,EAAY,EACvBG,EAAU,EACVC,EAAMrB,EAAO,GACbsB,EAAS,EACb,IAAK,IAAIC,EAAQhB,EAAOgB,EAAQ,MAAOA,GAAS,IAC5CD,EAEJA,EAAS,EAAIA,EACbpB,EAAUvB,UAAU6B,GACpBgB,EAAOP,GACP,MAAM/B,EAASc,EAAOd,OACtB,IAAK,IAAIuC,EAAM,EAAGA,EAAMvC,EAAQuC,IAC9BC,EAAY,CACV,MAAMC,EAAI3B,EAAOyB,GACXF,GAASI,GAAKhC,GAAQ0B,EAC5B,IAAIlC,EAAIwC,GAAKL,EAASD,EACtB,GAAIjB,EAAKjB,KAAOoC,EAAO,CACrBF,EAAMf,EAAQnB,GACd,MAAMuC,CACR,CACA,MAAME,EAAa,IAANzC,EAAU,EAAIoB,EAAQpB,EACnC,KAAOiB,EAAKjB,IAAM,GAIhB,GAHAA,GAAKyC,EACDzC,EAAI,IACNA,GAAKoB,GACHH,EAAKjB,KAAOoC,EAAO,CACrBF,EAAMf,EAAQnB,GACd,MAAMuC,CACR,CAEFF,EAAOH,GACPA,EAAMM,EACFR,EAAW,GAAKxB,GAClBW,EAAQnB,GAAKgC,IACbf,EAAKjB,GAAKoC,IAEVnB,EAAKK,MAAM,GACXU,EAAWF,EAAY,EACvBH,GAAY,EACZU,EAAOP,GAEX,CAKF,OAHAO,EAAOH,GACPG,EAAON,GACPhB,EAAUvB,UAAU,GACbuB,EAAU3B,YACjB,SAASiD,EAAOK,GAOd,IANAnB,GAAad,EAAMe,GACfA,EAAW,EACbD,GAAamB,GAAQlB,EAErBD,EAAYmB,EACdlB,GAAYI,EACLJ,GAAY,GACjBR,EAAMiB,KAAyB,IAAZV,EACfU,GAAW,MACblB,EAAUvB,UAAUyC,GACpBlB,EAAUd,eAAee,EAAO,EAAGiB,GACnCA,EAAU,GAEZV,IAAc,EACdC,GAAY,EAYd,IAVIQ,EAAWH,GAAWF,KACpBA,GACFC,EAASF,EACTG,GAAW,GAAKD,GAAU,EAC1BD,GAAY,MAEVC,EACFC,EAAUD,IAAWpB,EAAO,GAAKoB,GAAU,GAAKA,GAAU,IAG1Dc,GAAQX,EAAS,CACnB,KAAOP,EAAW,GAChBR,EAAMiB,KAAyB,IAAZV,EACfU,GAAW,MACblB,EAAUvB,UAAUyC,GACpBlB,EAAUd,eAAee,EAAO,EAAGiB,GACnCA,EAAU,GAEZV,IAAc,EACdC,GAAY,EAEVS,EAAU,IACZlB,EAAUvB,UAAUyC,GACpBlB,EAAUd,eAAee,EAAO,EAAGiB,GACnCA,EAAU,EAEd,CACF,CACF,EAIA,SAASU,EAAiBC,EAAGC,EAAGC,GAC9B,OAAOF,GAAK,EAAI,MAAQC,GAAK,EAAI,IAAMC,GAAK,CAC9C,CACA,SAASC,EAAqBH,EAAGC,EAAGC,EAAGE,GACrC,OAAOJ,GAAK,EAAQ,IAAJC,GAAe,IAAJC,IAAY,GAAS,IAAJE,IAAY,CAC1D,CACA,SAASC,EAAiBL,EAAGC,EAAGC,GAC9B,OAAOF,GAAK,GAAK,EAAQ,IAAJC,EAAUC,GAAK,CACtC,CAGA,SAASI,EAAM7G,EAAO8G,EAAK7C,GACzB,OAAOjE,EAAQ8G,EAAMA,EAAM9G,EAAQiE,EAAMA,EAAMjE,CACjD,CACA,SAAS+G,EAAI/G,GACX,OAAOA,EAAQA,CACjB,CACA,SAASgH,EAAQC,EAAMhB,EAAKiB,GAC1B,IAAIC,EAAK,EACLC,EAAM,MACV,MAAMC,EAAOJ,EAAKhB,GACZqB,EAAKD,EAAKE,IACVC,EAAKH,EAAKI,GACVC,EAAKL,EAAKM,GACVC,EAAKP,EAAKQ,GACVC,EAAKT,EAAKU,GAChB,IAAK,IAAIpE,EAAI0D,EAAKW,GAAS,GAALrE,EAAQA,EAAIsD,EAAKtD,GAAGqE,GAAI,CAC5C,MAAMC,EAAMhB,EAAKtD,GACXuE,EAAKD,EAAIV,IACTY,EAAQb,EAAKY,GAAMZ,EAAKY,GAC9B,KAAIC,GAASf,GAAb,CAEA,IAAIgB,EAAO,EACPlB,IACFkB,GAAQD,EAAQpB,EAAIkB,EAAIR,GAAKD,KACjBJ,IAGdgB,GAAQD,EAAQpB,EAAIkB,EAAIN,GAAKD,KACjBN,IAEZgB,GAAQD,EAAQpB,EAAIkB,EAAIJ,GAAKD,KACjBR,IAEZgB,GAAQD,EAAQpB,EAAIkB,EAAIF,GAAKD,KACjBV,IAEZA,EAAMgB,EACNjB,EAAKxD,EAjBK,CAkBZ,CACA0D,EAAKD,IAAMA,EACXC,EAAKF,GAAKA,CACZ,CAgEA,SAASpG,EAASsH,EAAMC,EAAWC,EAAO,CAAC,GACzC,MAAM,OACJC,EAAS,SAAQ,WACjBC,GAAa,EAAI,gBACjBC,EAAkB,EAAC,oBACnBC,EAAsB,EAAC,YACvBC,GAAc,GACZL,EACJ,IAAKF,IAASA,EAAKxF,OACjB,MAAM,IAAIgG,MAAM,4CAElB,KAAMR,aAAgBzF,YAAiByF,aAAgBS,mBACrD,MAAM,IAAID,MAAM,4CAElB,MAAMtF,EAAO,IAAIwF,YAAYV,EAAKxF,QAClC,IAAImG,GAA2B,IAAjBT,EAAKS,QACnB,MAAM9B,EAAsB,aAAXsB,EACXvB,EAjER,SAAyB1D,EAAMiF,GAC7B,MACMvB,EAAO,IAAIgC,MADW,WAAXT,EAAsB,KAAO,OAExCU,EAAO3F,EAAKG,OAClB,GAAe,aAAX8E,EACF,IAAK,IAAI7E,EAAI,EAAGA,EAAIuF,IAAQvF,EAAG,CAC7B,MAAMwF,EAAQ5F,EAAKI,GACbgD,EAAIwC,GAAS,GAAK,IAClB1C,EAAI0C,GAAS,GAAK,IAClB3C,EAAI2C,GAAS,EAAI,IACjB5C,EAAY,IAAR4C,EACJC,EAAQ1C,EAAqBH,EAAGC,EAAGC,EAAGE,GAC5C,IAAIsB,EAAMmB,KAASnC,EAAOA,EAAKmC,GAASnC,EAAKmC,GA1B1C,CACL3B,GAAI,EACJE,GAAI,EACJE,GAAI,EACJE,GAAI,EACJR,IAAK,EACLJ,GAAI,EACJa,GAAI,EACJqB,GAAI,EACJC,GAAI,EACJC,IAAK,EACLnC,IAAK,GAgBHa,EAAIN,IAAMpB,EACV0B,EAAIJ,IAAMrB,EACVyB,EAAIF,IAAMtB,EACVwB,EAAIR,IAAMd,EACVsB,EAAIV,KACN,MACK,GAAe,WAAXiB,EACT,IAAK,IAAI7E,EAAI,EAAGA,EAAIuF,IAAQvF,EAAG,CAC7B,MAAMwF,EAAQ5F,EAAKI,GACb8C,EAAI0C,GAAS,GAAK,IAClB3C,EAAI2C,GAAS,EAAI,IACjB5C,EAAY,IAAR4C,EACJC,EAAQxC,EAAiBL,EAAGC,EAAGC,GACrC,IAAIwB,EAAMmB,KAASnC,EAAOA,EAAKmC,GAASnC,EAAKmC,GAxC1C,CACL3B,GAAI,EACJE,GAAI,EACJE,GAAI,EACJE,GAAI,EACJR,IAAK,EACLJ,GAAI,EACJa,GAAI,EACJqB,GAAI,EACJC,GAAI,EACJC,IAAK,EACLnC,IAAK,GA8BHa,EAAIN,IAAMpB,EACV0B,EAAIJ,IAAMrB,EACVyB,EAAIF,IAAMtB,EACVwB,EAAIV,KACN,MAEA,IAAK,IAAI5D,EAAI,EAAGA,EAAIuF,IAAQvF,EAAG,CAC7B,MAAMwF,EAAQ5F,EAAKI,GACb8C,EAAI0C,GAAS,GAAK,IAClB3C,EAAI2C,GAAS,EAAI,IACjB5C,EAAY,IAAR4C,EACJC,EAAQ9C,EAAiBC,EAAGC,EAAGC,GACrC,IAAIwB,EAAMmB,KAASnC,EAAOA,EAAKmC,GAASnC,EAAKmC,GArD1C,CACL3B,GAAI,EACJE,GAAI,EACJE,GAAI,EACJE,GAAI,EACJR,IAAK,EACLJ,GAAI,EACJa,GAAI,EACJqB,GAAI,EACJC,GAAI,EACJC,IAAK,EACLnC,IAAK,GA2CHa,EAAIN,IAAMpB,EACV0B,EAAIJ,IAAMrB,EACVyB,EAAIF,IAAMtB,EACVwB,EAAIV,KACN,CAEF,OAAON,CACT,CAkBeuC,CAAgBjG,EAAMiF,GAC7BiB,EAAWxC,EAAKvD,OAChBgG,EAAmBD,EAAW,EAC9BE,EAAO,IAAIZ,YAAYU,EAAW,GAExC,IADA,IAAIG,EAAU,EACLjG,EAAI,EAAGA,EAAI8F,IAAY9F,EAAG,CACjC,MAAMsE,EAAMhB,EAAKtD,GACjB,GAAW,MAAPsE,EAAa,CACf,IAAI4B,EAAI,EAAI5B,EAAIV,IACZL,IACFe,EAAIR,IAAMoC,GACZ5B,EAAIN,IAAMkC,EACV5B,EAAIJ,IAAMgC,EACV5B,EAAIF,IAAM8B,EACV5C,EAAK2C,KAAa3B,CACpB,CACF,CAIA,IASI6B,EAAGC,EAAGC,EARV,IAJIjD,EAAIuB,GAAasB,EAAU,OAC7BZ,GAAU,GAERrF,EAAI,EACDA,EAAIiG,EAAU,IAAKjG,EACxBsD,EAAKtD,GAAGqE,GAAKrE,EAAI,EACjBsD,EAAKtD,EAAI,GAAG0F,GAAK1F,EACbqF,IACF/B,EAAKtD,GAAG4D,IAAMvD,KAAKiG,KAAKhD,EAAKtD,GAAG4D,MAKpC,IAHIyB,IACF/B,EAAKtD,GAAG4D,IAAMvD,KAAKiG,KAAKhD,EAAKtD,GAAG4D,MAE7B5D,EAAI,EAAGA,EAAIiG,IAAWjG,EAAG,CAC5BqD,EAAQC,EAAMtD,GAAG,GACjB,IAAIyD,EAAMH,EAAKtD,GAAGyD,IAClB,IAAK2C,IAAMJ,EAAK,GAAII,EAAI,KAElB9C,EAAK6C,EAAIH,EADbK,EAAKD,GAAK,IACa3C,KAAOA,GAFL2C,EAAIC,EAI7BL,EAAKI,GAAKD,EAEZH,EAAKI,GAAKpG,CACZ,CACA,IAAIuG,EAAUN,EAAUtB,EACxB,IAAK3E,EAAI,EAAGA,EAAIuG,GAAW,CAEzB,IADA,IAAIC,IACO,CACT,IAAIC,EAAKT,EAAK,GAEd,IADAQ,EAAKlD,EAAKmD,IACHd,IAAMa,EAAGZ,KAAOtC,EAAKkD,EAAGhD,IAAIoC,KAAOY,EAAGb,GAC3C,MAQF,IAPIa,EAAGZ,KAAOG,EACZU,EAAKT,EAAK,GAAKA,EAAKA,EAAK,OAEzB3C,EAAQC,EAAMmD,GAAI,GAClBD,EAAGb,GAAK3F,GAENyD,EAAMH,EAAKmD,GAAIhD,IACd2C,EAAI,GAAIC,EAAKD,EAAIA,IAAMJ,EAAK,KAC3BK,EAAKL,EAAK,IAAM1C,EAAK0C,EAAKK,IAAK5C,IAAMH,EAAK0C,EAAKK,EAAK,IAAI5C,KAC1D4C,MACE5C,GAAOH,EAAK6C,EAAIH,EAAKK,IAAK5C,MAHK2C,EAAIC,EAKvCL,EAAKI,GAAKD,EAEZH,EAAKI,GAAKK,CACZ,CACA,IAAIC,EAAKpD,EAAKkD,EAAGhD,IACbG,EAAK6C,EAAG5C,IACRW,EAAKmC,EAAG9C,IACRsC,EAAI,GAAKvC,EAAKY,GACdhB,IACFiD,EAAG1C,GAAKoC,GAAKvC,EAAK6C,EAAG1C,GAAKS,EAAKmC,EAAG5C,KACpC0C,EAAGxC,GAAKkC,GAAKvC,EAAK6C,EAAGxC,GAAKO,EAAKmC,EAAG1C,IAClCwC,EAAGtC,GAAKgC,GAAKvC,EAAK6C,EAAGtC,GAAKK,EAAKmC,EAAGxC,IAClCsC,EAAGpC,GAAK8B,GAAKvC,EAAK6C,EAAGpC,GAAKG,EAAKmC,EAAGtC,IAClCoC,EAAG5C,KAAO8C,EAAG9C,IACb4C,EAAGZ,MAAQ5F,EACXsD,EAAKoD,EAAGhB,IAAIrB,GAAKqC,EAAGrC,GACpBf,EAAKoD,EAAGrC,IAAIqB,GAAKgB,EAAGhB,GACpBgB,EAAGd,IAAMG,CACX,CACA,IAAIY,EAAU,GACd,IAAIC,EAAI,EACR,IAAK5G,EAAI,KAAO4G,EAAG,CACjB,IAAIhE,EAAIM,EAAM7C,KAAKwG,MAAMvD,EAAKtD,GAAGgE,IAAK,EAAG,KACrCnB,EAAIK,EAAM7C,KAAKwG,MAAMvD,EAAKtD,GAAGkE,IAAK,EAAG,KACrCpB,EAAII,EAAM7C,KAAKwG,MAAMvD,EAAKtD,GAAGoE,IAAK,EAAG,KACrCpB,EAAI,IACJO,IACFP,EAAIE,EAAM7C,KAAKwG,MAAMvD,EAAKtD,GAAG8D,IAAK,EAAG,KACjCmB,IAEFjC,EAAIA,IADqC,iBAAhBiC,EAA2BA,EAAc,KAC7C,EAAI,KAEvBH,GAAc9B,GAAKgC,IACrBpC,EAAIC,EAAIC,EAAIiC,EACZ/B,EAAI,IAGR,MAAMwC,EAAQjC,EAAW,CAACX,EAAGC,EAAGC,EAAGE,GAAK,CAACJ,EAAGC,EAAGC,GAI/C,GAHegE,EAAgBH,EAASnB,IAEtCmB,EAAQI,KAAKvB,GACS,IAAnBxF,EAAIsD,EAAKtD,GAAGqE,IACf,KACJ,CACA,OAAOsC,CACT,CACA,SAASG,EAAgBH,EAASnB,GAChC,IAAK,IAAIxF,EAAI,EAAGA,EAAI2G,EAAQ5G,OAAQC,IAAK,CACvC,MAAMgH,EAAIL,EAAQ3G,GAClB,IAAIiH,EAAaD,EAAE,KAAOxB,EAAM,IAAMwB,EAAE,KAAOxB,EAAM,IAAMwB,EAAE,KAAOxB,EAAM,GACtE0B,IAAeF,EAAEjH,QAAU,GAAKyF,EAAMzF,QAAU,IAAIiH,EAAE,KAAOxB,EAAM,GACvE,GAAIyB,GAAcC,EAChB,OAAO,CACX,CACA,OAAO,CACT,CAGA,SAASC,EAAyBnE,EAAGF,GACnC,IACIsE,EADAC,EAAM,EAEV,IAAKD,EAAI,EAAGA,EAAIpE,EAAEjD,OAAQqH,IAAK,CAC7B,MAAME,EAAKtE,EAAEoE,GAAKtE,EAAEsE,GACpBC,GAAOC,EAAKA,CACd,CACA,OAAOD,CACT,CAGA,SAASE,EAAU9H,EAAM+H,GACvB,OAAOA,EAAO,EAAInH,KAAKwG,MAAMpH,EAAO+H,GAAQA,EAAO/H,CACrD,CACA,SAAStC,EAAYuH,GAAM,SAAC+C,EAAW,EAAC,WAAEC,EAAa,GAAE,YAAEzC,EAAc,MAAQ,CAAC,GAChF,MAAMrF,EAAO,IAAIwF,YAAYV,EAAKxF,QAClC,IAAK,IAAIc,EAAI,EAAGA,EAAIJ,EAAKG,OAAQC,IAAK,CACpC,MAAMwF,EAAQ5F,EAAKI,GACnB,IAAIgD,EAAIwC,GAAS,GAAK,IAClB1C,EAAI0C,GAAS,GAAK,IAClB3C,EAAI2C,GAAS,EAAI,IACjB5C,EAAY,IAAR4C,EACRxC,EAAIuE,EAAUvE,EAAG0E,GACbzC,IAEFjC,EAAIA,IADqC,iBAAhBiC,EAA2BA,EAAc,KAC7C,EAAI,KAE3BrC,EAAI2E,EAAU3E,EAAG6E,GACjB5E,EAAI0E,EAAU1E,EAAG4E,GACjB3E,EAAIyE,EAAUzE,EAAG2E,GACjB7H,EAAKI,GAAKgD,GAAK,GAAKF,GAAK,GAAKD,GAAK,EAAID,GAAK,CAC9C,CACF,CACA,SAAS/F,EAAa6H,EAAMiC,EAAS9B,EAAS,UAC5C,IAAKH,IAASA,EAAKxF,OACjB,MAAM,IAAIgG,MAAM,4CAElB,KAAMR,aAAgBzF,YAAiByF,aAAgBS,mBACrD,MAAM,IAAID,MAAM,4CAElB,GAAIyB,EAAQ5G,OAAS,IACnB,MAAM,IAAImF,MAAM,qDAElB,MAAMtF,EAAO,IAAIwF,YAAYV,EAAKxF,QAC5Ba,EAASH,EAAKG,OACd+F,EAAsB,WAAXjB,EAAsB,KAAO,MACxCY,EAAQ,IAAIxG,WAAWc,GACvB4H,EAAQ,IAAIrC,MAAMQ,GAExB,GAAe,aAAXjB,EACF,IAAK,IAAI7E,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC/B,MAAMwF,EAAQ5F,EAAKI,GACbgD,EAAIwC,GAAS,GAAK,IAClB1C,EAAI0C,GAAS,GAAK,IAClB3C,EAAI2C,GAAS,EAAI,IACjB5C,EAAY,IAAR4C,EACJoC,EAAM7E,EAAqBH,EAAGC,EAAGC,EAAGE,GACpCV,EAAMsF,KAAOD,EAAQA,EAAMC,GAAOD,EAAMC,GAAOC,EAAsBjF,EAAGC,EAAGC,EAAGE,EAAG2D,GACvFlB,EAAMzF,GAAKsC,CACb,KACK,CACL,MAAMwF,EAA2B,WAAXjD,EAAsB5B,EAAmBN,EAC/D,IAAK,IAAI3C,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC/B,MAAMwF,EAAQ5F,EAAKI,GACb8C,EAAI0C,GAAS,GAAK,IAClB3C,EAAI2C,GAAS,EAAI,IACjB5C,EAAY,IAAR4C,EACJoC,EAAME,EAAclF,EAAGC,EAAGC,GAC1BR,EAAMsF,KAAOD,EAAQA,EAAMC,GAAOD,EAAMC,GAAOG,EAAqBnF,EAAGC,EAAGC,EAAG6D,GACnFlB,EAAMzF,GAAKsC,CACb,CACF,CACA,OAAOmD,CACT,CACA,SAASoC,EAAsBjF,EAAGC,EAAGC,EAAGE,EAAG2D,GACzC,IAAIC,EAAI,EACJoB,EAAU,MACd,IAAK,IAAIhI,EAAI,EAAGA,EAAI2G,EAAQ5G,OAAQC,IAAK,CACvC,MAAMiI,EAAMtB,EAAQ3G,GAEpB,IAAIkI,EAAUC,EADHF,EAAI,GACSjF,GACpBkF,EAAUF,IAGdE,GAAWC,EADAF,EAAI,GACMrF,GACjBsF,EAAUF,IAGdE,GAAWC,EADAF,EAAI,GACMpF,GACjBqF,EAAUF,IAGdE,GAAWC,EADAF,EAAI,GACMnF,GACjBoF,EAAUF,IAEdA,EAAUE,EACVtB,EAAI5G,KACN,CACA,OAAO4G,CACT,CACA,SAASmB,EAAqBnF,EAAGC,EAAGC,EAAG6D,GACrC,IAAIC,EAAI,EACJoB,EAAU,MACd,IAAK,IAAIhI,EAAI,EAAGA,EAAI2G,EAAQ5G,OAAQC,IAAK,CACvC,MAAMiI,EAAMtB,EAAQ3G,GAEpB,IAAIkI,EAAUC,EADHF,EAAI,GACSrF,GACpBsF,EAAUF,IAGdE,GAAWC,EADAF,EAAI,GACMpF,GACjBqF,EAAUF,IAGdE,GAAWC,EADAF,EAAI,GACMnF,GACjBoF,EAAUF,IAEdA,EAAUE,EACVtB,EAAI5G,IACN,CACA,OAAO4G,CACT,CACA,SAASvJ,EAAoBsJ,EAASyB,EAAaC,EAAY,GAC7D,IAAK1B,EAAQ5G,SAAWqI,EAAYrI,OAClC,OACF,MAAMuI,EAAa3B,EAAQ4B,KAAKvB,GAAMA,EAAEzH,MAAM,EAAG,KAC3CiJ,EAAcH,EAAYA,EAC1BI,EAAM9B,EAAQ,GAAG5G,OACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIoI,EAAYrI,OAAQC,IAAK,CAC3C,IAAIwF,EAAQ4C,EAAYpI,GAEtBwF,EADEA,EAAMzF,OAAS0I,EACT,CAACjD,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAI,KAC9BA,EAAMzF,OAAS0I,EAChBjD,EAAMjG,MAAM,EAAG,GAEfiG,EAAMjG,QAEhB,MAAMqD,EAAI1F,EAA8BoL,EAAY9C,EAAMjG,MAAM,EAAG,GAAI4H,GACjE7E,EAAMM,EAAE,GACR8F,EAAa9F,EAAE,GACjB8F,EAAa,GAAKA,GAAcF,IAClC7B,EAAQrE,GAAOkD,EAEnB,CACF,CACA,SAAS2C,EAAKnF,GACZ,OAAOA,EAAIA,CACb,CACA,SAAS/F,EAAkB0L,EAAQC,EAAOC,EAAa1B,GACrD,IAAI2B,EAAUC,IACVC,GAAgB,EACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAO5I,OAAQkJ,IAAK,CACtC,MACMC,EAAOL,EAAWD,EADHD,EAAOM,IAExBC,EAAOJ,IACTA,EAAUI,EACVF,EAAeC,EAEnB,CACA,OAAOD,CACT,CACA,SAAS9L,EAA8ByL,EAAQC,EAAOC,EAAa1B,GACjE,IAAI2B,EAAUC,IACVC,GAAgB,EACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAO5I,OAAQkJ,IAAK,CACtC,MACMC,EAAOL,EAAWD,EADHD,EAAOM,IAExBC,EAAOJ,IACTA,EAAUI,EACVF,EAAeC,EAEnB,CACA,MAAO,CAACD,EAAcF,EACxB,CACA,SAAS9L,EAAa2L,EAAQC,EAAOC,EAAa1B,GAChD,OAAOwB,EAAO1L,EAAkB0L,EAAQC,EAAOC,GACjD,CAGA,SAASjM,EAAWuM,EAAM,CAAC,GACzB,MAAM,gBAACrK,EAAkB,KAAI,KAAEsK,GAAO,GAAQD,EACxCE,EAASxK,EAAaC,GAEtBkC,EAAQ,IAAI/B,WAAW,KACvBgC,EAAO,IAAIC,WAFH,MAGRC,EAAU,IAAID,WAHN,MAId,IAAIoI,GAAU,EACd,MAAO,CACLnK,QACEkK,EAAOlK,QACPmK,GAAU,CACZ,EACAC,SACEF,EAAO7J,UAAUlC,EAAkBG,QACrC,EACA6B,MAAK,IACI+J,EAAO/J,QAEhBF,UAAS,IACAiK,EAAOjK,YAEZF,aACF,OAAOmK,EAAOnK,MAChB,EACImK,aACF,OAAOA,CACT,EACAG,cACAC,WAAWhE,EAAO9E,EAAOC,EAAQgE,EAAO,CAAC,GACvC,MAAM,YACJ8E,GAAc,EAAK,iBACnBC,EAAmB,EAAC,MACpBC,EAAQ,EAAC,QACTjD,EAAU,KAAI,OACdkD,EAAS,EAAC,WACV/I,EAAa,EAAC,QACdgJ,GAAU,GACRlF,EACJ,IAAImF,GAAQ,EAYZ,GAXIX,EACGE,IACHS,GAAQ,EACRP,IACAF,GAAU,GAGZS,EAAQC,QAAQpF,EAAKmF,OAEvBpJ,EAAQN,KAAKC,IAAI,EAAGD,KAAK4J,MAAMtJ,IAC/BC,EAASP,KAAKC,IAAI,EAAGD,KAAK4J,MAAMrJ,IAC5BmJ,EAAO,CACT,IAAKpD,EACH,MAAM,IAAIzB,MAAM,kDA+C1B,SAAuCmE,EAAQ1I,EAAOC,EAAQ+F,EAAS7F,EAAa,GAClF,MAGMoJ,EAASC,IAA4BrJ,EAAa,GAAK,EADhCsJ,EAAezD,EAAQ5G,QAAU,EAI9DsK,EAAYhB,EAAQ1I,GACpB0J,EAAYhB,EAAQzI,GACpByI,EAAO1J,WAAW,CAACuK,EAJU,EACJ,GAI3B,CAvDQI,CAA8BjB,EAAQ1I,EAAOC,EAAQ+F,EAAS7F,GAC9DyJ,EAAiBlB,EAAQ1C,GACrBkD,GAAU,GAsDtB,SAA2BR,EAAQQ,GACjCR,EAAO7J,UAAU,IACjB6J,EAAO7J,UAAU,KACjB6J,EAAO7J,UAAU,IACjBgL,EAAcnB,EAAQ,eACtBA,EAAO7J,UAAU,GACjB6J,EAAO7J,UAAU,GACjB6K,EAAYhB,EAAQQ,GACpBR,EAAO7J,UAAU,EACnB,CA9DUiL,CAAkBpB,EAAQQ,EAE9B,CACA,MAAMa,EAAYrK,KAAKwG,MAAM+C,EAAQ,KAa3C,SAAiCP,EAAQS,EAASF,EAAOF,EAAaC,GAQpE,IAAIgB,EAAQlI,EAPZ4G,EAAO7J,UAAU,IACjB6J,EAAO7J,UAAU,KACjB6J,EAAO7J,UAAU,GACbmK,EAAmB,IACrBA,EAAmB,EACnBD,GAAc,GAGXA,GAIHiB,EAAS,EACTlI,EAAO,IAJPkI,EAAS,EACTlI,EAAO,GAKLqH,GAAW,IACbrH,EAAiB,EAAVqH,GAETrH,IAAS,EAET4G,EAAO7J,UAAU,EAAIiD,EAAmBkI,GACxCN,EAAYhB,EAAQO,GACpBP,EAAO7J,UAAUmK,GAAoB,GACrCN,EAAO7J,UAAU,EACnB,CArCMoL,CAAwBvB,EAAQS,EAASY,EAAWhB,EAAaC,GACjE,MAAMkB,EAAqBb,QAAQrD,KAAaoD,GAsEtD,SAA+BV,EAAQ1I,EAAOC,EAAQkK,GAMpD,GALAzB,EAAO7J,UAAU,IACjB6K,EAAYhB,EAAQ,GACpBgB,EAAYhB,EAAQ,GACpBgB,EAAYhB,EAAQ1I,GACpB0J,EAAYhB,EAAQzI,GAChBkK,EAAc,CAChB,MAAMC,EAAY,EACZC,EAAS,EACTC,EAAUb,EAAeU,EAAa/K,QAAU,EACtDsJ,EAAO7J,UAAU,IAAMuL,EAAYC,EAAS,EAAIC,EAClD,MACE5B,EAAO7J,UAAU,EAErB,CAnFM0L,CAAsB7B,EAAQ1I,EAAOC,EAAQiK,EAAqBlE,EAAU,MACxEkE,GACFN,EAAiBlB,EAAQ1C,GAkFjC,SAAsB0C,EAAQ5D,EAAO9E,EAAOC,EAAQE,EAAa,EAAGE,EAAOC,EAAME,GAC/ET,EAAkBC,EAAOC,EAAQ6E,EAAO3E,EAAYuI,EAAQrI,EAAOC,EAAME,EAC3E,CAnFMgK,CAAa9B,EAAQ5D,EAAO9E,EAAOC,EAAQE,EAAYE,EAAOC,EAAME,EACtE,GAEF,SAASqI,IACPgB,EAAcnB,EAAQ,SACxB,CACF,CAgDA,SAASkB,EAAiBlB,EAAQ1C,GAChC,MAAMyE,EAAmB,GAAKhB,EAAezD,EAAQ5G,QACrD,IAAK,IAAIC,EAAI,EAAGA,EAAIoL,EAAkBpL,IAAK,CACzC,IAAIwF,EAAQ,CAAC,EAAG,EAAG,GACfxF,EAAI2G,EAAQ5G,SACdyF,EAAQmB,EAAQ3G,IAElBqJ,EAAO7J,UAAUgG,EAAM,IACvB6D,EAAO7J,UAAUgG,EAAM,IACvB6D,EAAO7J,UAAUgG,EAAM,GACzB,CACF,CAmBA,SAAS6E,EAAYhB,EAAQgC,GAC3BhC,EAAO7J,UAAkB,IAAR6L,GACjBhC,EAAO7J,UAAU6L,GAAS,EAAI,IAChC,CACA,SAASb,EAAcnB,EAAQiC,GAC7B,IAAK,IAAItL,EAAI,EAAGA,EAAIsL,EAAKvL,OAAQC,IAC/BqJ,EAAO7J,UAAU8L,EAAKC,WAAWvL,GAErC,CACA,SAASoK,EAAerK,GACtB,OAAOM,KAAKC,IAAID,KAAKmL,KAAKnL,KAAKoL,KAAK1L,IAAU,EAChD,CACA,IAAIhD,EAAcH,C,GCtzBd8O,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAazP,QAGrB,IAAI2P,EAASL,EAAyBE,GAAY,CAGjDxP,QAAS,CAAC,GAOX,OAHA4P,EAAoBJ,GAAUG,EAAQA,EAAO3P,QAASuP,GAG/CI,EAAO3P,OACf,CCrBAuP,EAAoBvE,EAAK2E,IACxB,IAAIE,EAASF,GAAUA,EAAOG,WAC7B,IAAOH,EAAiB,QACxB,IAAM,EAEP,OADAJ,EAAoBzF,EAAE+F,EAAQ,CAAEjJ,EAAGiJ,IAC5BA,CAAM,ECLdN,EAAoBzF,EAAI,CAAC9J,EAAS+P,KACjC,IAAI,IAAIvE,KAAOuE,EACXR,EAAoBS,EAAED,EAAYvE,KAAS+D,EAAoBS,EAAEhQ,EAASwL,IAC5E1L,OAAOC,eAAeC,EAASwL,EAAK,CAAElL,YAAY,EAAMD,IAAK0P,EAAWvE,IAE1E,ECND+D,EAAoBS,EAAI,CAACC,EAAKC,IAAUpQ,OAAOqQ,UAAUC,eAAeC,KAAKJ,EAAKC,G,iCCGlF,MAAMI,EAAcC,KAEdC,GAAU,IAAAhQ,cAEhB8P,EAAIG,iBAAiB,WAAYC,IAC/B,GAAIA,EAAIlN,KAAKmN,SAAU,CACrB,MAAM,KAAEnN,EAAI,YAAE8J,EAAW,MAAE/I,EAAK,OAAEC,EAAM,MAAEgJ,GAAUkD,EAAIlN,KAAKmN,SACvDpG,GAAU,IAAAvJ,UAASwC,EAAM,IAAK,CAAEqF,YAAayE,IAC7CjE,GAAQ,IAAA5I,cAAa+C,EAAM+G,GACjCiG,EAAQnD,WAAWhE,EAAO9E,EAAOC,EAAQ,CAAE+F,UAASiD,QAAOF,e,MAClDoD,EAAIlN,KAAK2J,SAClBqD,EAAQrD,SACRmD,EAAIM,YAAY,IAAIC,KAAK,CAACL,EAAQtN,SAAU,CAAE4N,KAAM,e","sources":["webpack:///./node_modules/gifenc/dist/gifenc.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./src/gifworker.ts"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __markAsModule = (target) => __defProp(target, \"__esModule\", {value: true});\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, {get: all[name], enumerable: true});\n};\n\n// src/index.js\n__markAsModule(exports);\n__export(exports, {\n  GIFEncoder: () => GIFEncoder,\n  applyPalette: () => applyPalette,\n  default: () => src_default,\n  nearestColor: () => nearestColor,\n  nearestColorIndex: () => nearestColorIndex,\n  nearestColorIndexWithDistance: () => nearestColorIndexWithDistance,\n  prequantize: () => prequantize,\n  quantize: () => quantize,\n  snapColorsToPalette: () => snapColorsToPalette\n});\n\n// src/constants.js\nvar constants_default = {\n  signature: \"GIF\",\n  version: \"89a\",\n  trailer: 59,\n  extensionIntroducer: 33,\n  applicationExtensionLabel: 255,\n  graphicControlExtensionLabel: 249,\n  imageSeparator: 44,\n  signatureSize: 3,\n  versionSize: 3,\n  globalColorTableFlagMask: 128,\n  colorResolutionMask: 112,\n  sortFlagMask: 8,\n  globalColorTableSizeMask: 7,\n  applicationIdentifierSize: 8,\n  applicationAuthCodeSize: 3,\n  disposalMethodMask: 28,\n  userInputFlagMask: 2,\n  transparentColorFlagMask: 1,\n  localColorTableFlagMask: 128,\n  interlaceFlagMask: 64,\n  idSortFlagMask: 32,\n  localColorTableSizeMask: 7\n};\n\n// src/stream.js\nfunction createStream(initialCapacity = 256) {\n  let cursor = 0;\n  let contents = new Uint8Array(initialCapacity);\n  return {\n    get buffer() {\n      return contents.buffer;\n    },\n    reset() {\n      cursor = 0;\n    },\n    bytesView() {\n      return contents.subarray(0, cursor);\n    },\n    bytes() {\n      return contents.slice(0, cursor);\n    },\n    writeByte(byte) {\n      expand(cursor + 1);\n      contents[cursor] = byte;\n      cursor++;\n    },\n    writeBytes(data, offset = 0, byteLength = data.length) {\n      expand(cursor + byteLength);\n      for (let i = 0; i < byteLength; i++) {\n        contents[cursor++] = data[i + offset];\n      }\n    },\n    writeBytesView(data, offset = 0, byteLength = data.byteLength) {\n      expand(cursor + byteLength);\n      contents.set(data.subarray(offset, offset + byteLength), cursor);\n      cursor += byteLength;\n    }\n  };\n  function expand(newCapacity) {\n    var prevCapacity = contents.length;\n    if (prevCapacity >= newCapacity)\n      return;\n    var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n    newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n    if (prevCapacity != 0)\n      newCapacity = Math.max(newCapacity, 256);\n    const oldContents = contents;\n    contents = new Uint8Array(newCapacity);\n    if (cursor > 0)\n      contents.set(oldContents.subarray(0, cursor), 0);\n  }\n}\n\n// src/lzwEncode.js\nvar BITS = 12;\nvar DEFAULT_HSIZE = 5003;\nvar MASKS = [\n  0,\n  1,\n  3,\n  7,\n  15,\n  31,\n  63,\n  127,\n  255,\n  511,\n  1023,\n  2047,\n  4095,\n  8191,\n  16383,\n  32767,\n  65535\n];\nfunction lzwEncode(width, height, pixels, colorDepth, outStream = createStream(512), accum = new Uint8Array(256), htab = new Int32Array(DEFAULT_HSIZE), codetab = new Int32Array(DEFAULT_HSIZE)) {\n  const hsize = htab.length;\n  const initCodeSize = Math.max(2, colorDepth);\n  accum.fill(0);\n  codetab.fill(0);\n  htab.fill(-1);\n  let cur_accum = 0;\n  let cur_bits = 0;\n  const init_bits = initCodeSize + 1;\n  const g_init_bits = init_bits;\n  let clear_flg = false;\n  let n_bits = g_init_bits;\n  let maxcode = (1 << n_bits) - 1;\n  const ClearCode = 1 << init_bits - 1;\n  const EOFCode = ClearCode + 1;\n  let free_ent = ClearCode + 2;\n  let a_count = 0;\n  let ent = pixels[0];\n  let hshift = 0;\n  for (let fcode = hsize; fcode < 65536; fcode *= 2) {\n    ++hshift;\n  }\n  hshift = 8 - hshift;\n  outStream.writeByte(initCodeSize);\n  output(ClearCode);\n  const length = pixels.length;\n  for (let idx = 1; idx < length; idx++) {\n    next_block: {\n      const c = pixels[idx];\n      const fcode = (c << BITS) + ent;\n      let i = c << hshift ^ ent;\n      if (htab[i] === fcode) {\n        ent = codetab[i];\n        break next_block;\n      }\n      const disp = i === 0 ? 1 : hsize - i;\n      while (htab[i] >= 0) {\n        i -= disp;\n        if (i < 0)\n          i += hsize;\n        if (htab[i] === fcode) {\n          ent = codetab[i];\n          break next_block;\n        }\n      }\n      output(ent);\n      ent = c;\n      if (free_ent < 1 << BITS) {\n        codetab[i] = free_ent++;\n        htab[i] = fcode;\n      } else {\n        htab.fill(-1);\n        free_ent = ClearCode + 2;\n        clear_flg = true;\n        output(ClearCode);\n      }\n    }\n  }\n  output(ent);\n  output(EOFCode);\n  outStream.writeByte(0);\n  return outStream.bytesView();\n  function output(code) {\n    cur_accum &= MASKS[cur_bits];\n    if (cur_bits > 0)\n      cur_accum |= code << cur_bits;\n    else\n      cur_accum = code;\n    cur_bits += n_bits;\n    while (cur_bits >= 8) {\n      accum[a_count++] = cur_accum & 255;\n      if (a_count >= 254) {\n        outStream.writeByte(a_count);\n        outStream.writeBytesView(accum, 0, a_count);\n        a_count = 0;\n      }\n      cur_accum >>= 8;\n      cur_bits -= 8;\n    }\n    if (free_ent > maxcode || clear_flg) {\n      if (clear_flg) {\n        n_bits = g_init_bits;\n        maxcode = (1 << n_bits) - 1;\n        clear_flg = false;\n      } else {\n        ++n_bits;\n        maxcode = n_bits === BITS ? 1 << n_bits : (1 << n_bits) - 1;\n      }\n    }\n    if (code == EOFCode) {\n      while (cur_bits > 0) {\n        accum[a_count++] = cur_accum & 255;\n        if (a_count >= 254) {\n          outStream.writeByte(a_count);\n          outStream.writeBytesView(accum, 0, a_count);\n          a_count = 0;\n        }\n        cur_accum >>= 8;\n        cur_bits -= 8;\n      }\n      if (a_count > 0) {\n        outStream.writeByte(a_count);\n        outStream.writeBytesView(accum, 0, a_count);\n        a_count = 0;\n      }\n    }\n  }\n}\nvar lzwEncode_default = lzwEncode;\n\n// src/rgb-packing.js\nfunction rgb888_to_rgb565(r, g, b) {\n  return r << 8 & 63488 | g << 2 & 992 | b >> 3;\n}\nfunction rgba8888_to_rgba4444(r, g, b, a) {\n  return r >> 4 | g & 240 | (b & 240) << 4 | (a & 240) << 8;\n}\nfunction rgb888_to_rgb444(r, g, b) {\n  return r >> 4 << 8 | g & 240 | b >> 4;\n}\n\n// src/pnnquant2.js\nfunction clamp(value, min, max) {\n  return value < min ? min : value > max ? max : value;\n}\nfunction sqr(value) {\n  return value * value;\n}\nfunction find_nn(bins, idx, hasAlpha) {\n  var nn = 0;\n  var err = 1e100;\n  const bin1 = bins[idx];\n  const n1 = bin1.cnt;\n  const wa = bin1.ac;\n  const wr = bin1.rc;\n  const wg = bin1.gc;\n  const wb = bin1.bc;\n  for (var i = bin1.fw; i != 0; i = bins[i].fw) {\n    const bin = bins[i];\n    const n2 = bin.cnt;\n    const nerr2 = n1 * n2 / (n1 + n2);\n    if (nerr2 >= err)\n      continue;\n    var nerr = 0;\n    if (hasAlpha) {\n      nerr += nerr2 * sqr(bin.ac - wa);\n      if (nerr >= err)\n        continue;\n    }\n    nerr += nerr2 * sqr(bin.rc - wr);\n    if (nerr >= err)\n      continue;\n    nerr += nerr2 * sqr(bin.gc - wg);\n    if (nerr >= err)\n      continue;\n    nerr += nerr2 * sqr(bin.bc - wb);\n    if (nerr >= err)\n      continue;\n    err = nerr;\n    nn = i;\n  }\n  bin1.err = err;\n  bin1.nn = nn;\n}\nfunction create_bin() {\n  return {\n    ac: 0,\n    rc: 0,\n    gc: 0,\n    bc: 0,\n    cnt: 0,\n    nn: 0,\n    fw: 0,\n    bk: 0,\n    tm: 0,\n    mtm: 0,\n    err: 0\n  };\n}\nfunction create_bin_list(data, format) {\n  const bincount = format === \"rgb444\" ? 4096 : 65536;\n  const bins = new Array(bincount);\n  const size = data.length;\n  if (format === \"rgba4444\") {\n    for (let i = 0; i < size; ++i) {\n      const color = data[i];\n      const a = color >> 24 & 255;\n      const b = color >> 16 & 255;\n      const g = color >> 8 & 255;\n      const r = color & 255;\n      const index = rgba8888_to_rgba4444(r, g, b, a);\n      let bin = index in bins ? bins[index] : bins[index] = create_bin();\n      bin.rc += r;\n      bin.gc += g;\n      bin.bc += b;\n      bin.ac += a;\n      bin.cnt++;\n    }\n  } else if (format === \"rgb444\") {\n    for (let i = 0; i < size; ++i) {\n      const color = data[i];\n      const b = color >> 16 & 255;\n      const g = color >> 8 & 255;\n      const r = color & 255;\n      const index = rgb888_to_rgb444(r, g, b);\n      let bin = index in bins ? bins[index] : bins[index] = create_bin();\n      bin.rc += r;\n      bin.gc += g;\n      bin.bc += b;\n      bin.cnt++;\n    }\n  } else {\n    for (let i = 0; i < size; ++i) {\n      const color = data[i];\n      const b = color >> 16 & 255;\n      const g = color >> 8 & 255;\n      const r = color & 255;\n      const index = rgb888_to_rgb565(r, g, b);\n      let bin = index in bins ? bins[index] : bins[index] = create_bin();\n      bin.rc += r;\n      bin.gc += g;\n      bin.bc += b;\n      bin.cnt++;\n    }\n  }\n  return bins;\n}\nfunction quantize(rgba, maxColors, opts = {}) {\n  const {\n    format = \"rgb565\",\n    clearAlpha = true,\n    clearAlphaColor = 0,\n    clearAlphaThreshold = 0,\n    oneBitAlpha = false\n  } = opts;\n  if (!rgba || !rgba.buffer) {\n    throw new Error(\"quantize() expected RGBA Uint8Array data\");\n  }\n  if (!(rgba instanceof Uint8Array) && !(rgba instanceof Uint8ClampedArray)) {\n    throw new Error(\"quantize() expected RGBA Uint8Array data\");\n  }\n  const data = new Uint32Array(rgba.buffer);\n  let useSqrt = opts.useSqrt !== false;\n  const hasAlpha = format === \"rgba4444\";\n  const bins = create_bin_list(data, format);\n  const bincount = bins.length;\n  const bincountMinusOne = bincount - 1;\n  const heap = new Uint32Array(bincount + 1);\n  var maxbins = 0;\n  for (var i = 0; i < bincount; ++i) {\n    const bin = bins[i];\n    if (bin != null) {\n      var d = 1 / bin.cnt;\n      if (hasAlpha)\n        bin.ac *= d;\n      bin.rc *= d;\n      bin.gc *= d;\n      bin.bc *= d;\n      bins[maxbins++] = bin;\n    }\n  }\n  if (sqr(maxColors) / maxbins < 0.022) {\n    useSqrt = false;\n  }\n  var i = 0;\n  for (; i < maxbins - 1; ++i) {\n    bins[i].fw = i + 1;\n    bins[i + 1].bk = i;\n    if (useSqrt)\n      bins[i].cnt = Math.sqrt(bins[i].cnt);\n  }\n  if (useSqrt)\n    bins[i].cnt = Math.sqrt(bins[i].cnt);\n  var h, l, l2;\n  for (i = 0; i < maxbins; ++i) {\n    find_nn(bins, i, false);\n    var err = bins[i].err;\n    for (l = ++heap[0]; l > 1; l = l2) {\n      l2 = l >> 1;\n      if (bins[h = heap[l2]].err <= err)\n        break;\n      heap[l] = h;\n    }\n    heap[l] = i;\n  }\n  var extbins = maxbins - maxColors;\n  for (i = 0; i < extbins; ) {\n    var tb;\n    for (; ; ) {\n      var b1 = heap[1];\n      tb = bins[b1];\n      if (tb.tm >= tb.mtm && bins[tb.nn].mtm <= tb.tm)\n        break;\n      if (tb.mtm == bincountMinusOne)\n        b1 = heap[1] = heap[heap[0]--];\n      else {\n        find_nn(bins, b1, false);\n        tb.tm = i;\n      }\n      var err = bins[b1].err;\n      for (l = 1; (l2 = l + l) <= heap[0]; l = l2) {\n        if (l2 < heap[0] && bins[heap[l2]].err > bins[heap[l2 + 1]].err)\n          l2++;\n        if (err <= bins[h = heap[l2]].err)\n          break;\n        heap[l] = h;\n      }\n      heap[l] = b1;\n    }\n    var nb = bins[tb.nn];\n    var n1 = tb.cnt;\n    var n2 = nb.cnt;\n    var d = 1 / (n1 + n2);\n    if (hasAlpha)\n      tb.ac = d * (n1 * tb.ac + n2 * nb.ac);\n    tb.rc = d * (n1 * tb.rc + n2 * nb.rc);\n    tb.gc = d * (n1 * tb.gc + n2 * nb.gc);\n    tb.bc = d * (n1 * tb.bc + n2 * nb.bc);\n    tb.cnt += nb.cnt;\n    tb.mtm = ++i;\n    bins[nb.bk].fw = nb.fw;\n    bins[nb.fw].bk = nb.bk;\n    nb.mtm = bincountMinusOne;\n  }\n  let palette = [];\n  var k = 0;\n  for (i = 0; ; ++k) {\n    let r = clamp(Math.round(bins[i].rc), 0, 255);\n    let g = clamp(Math.round(bins[i].gc), 0, 255);\n    let b = clamp(Math.round(bins[i].bc), 0, 255);\n    let a = 255;\n    if (hasAlpha) {\n      a = clamp(Math.round(bins[i].ac), 0, 255);\n      if (oneBitAlpha) {\n        const threshold = typeof oneBitAlpha === \"number\" ? oneBitAlpha : 127;\n        a = a <= threshold ? 0 : 255;\n      }\n      if (clearAlpha && a <= clearAlphaThreshold) {\n        r = g = b = clearAlphaColor;\n        a = 0;\n      }\n    }\n    const color = hasAlpha ? [r, g, b, a] : [r, g, b];\n    const exists = existsInPalette(palette, color);\n    if (!exists)\n      palette.push(color);\n    if ((i = bins[i].fw) == 0)\n      break;\n  }\n  return palette;\n}\nfunction existsInPalette(palette, color) {\n  for (let i = 0; i < palette.length; i++) {\n    const p = palette[i];\n    let matchesRGB = p[0] === color[0] && p[1] === color[1] && p[2] === color[2];\n    let matchesAlpha = p.length >= 4 && color.length >= 4 ? p[3] === color[3] : true;\n    if (matchesRGB && matchesAlpha)\n      return true;\n  }\n  return false;\n}\n\n// src/color.js\nfunction euclideanDistanceSquared(a, b) {\n  var sum = 0;\n  var n;\n  for (n = 0; n < a.length; n++) {\n    const dx = a[n] - b[n];\n    sum += dx * dx;\n  }\n  return sum;\n}\n\n// src/palettize.js\nfunction roundStep(byte, step) {\n  return step > 1 ? Math.round(byte / step) * step : byte;\n}\nfunction prequantize(rgba, {roundRGB = 5, roundAlpha = 10, oneBitAlpha = null} = {}) {\n  const data = new Uint32Array(rgba.buffer);\n  for (let i = 0; i < data.length; i++) {\n    const color = data[i];\n    let a = color >> 24 & 255;\n    let b = color >> 16 & 255;\n    let g = color >> 8 & 255;\n    let r = color & 255;\n    a = roundStep(a, roundAlpha);\n    if (oneBitAlpha) {\n      const threshold = typeof oneBitAlpha === \"number\" ? oneBitAlpha : 127;\n      a = a <= threshold ? 0 : 255;\n    }\n    r = roundStep(r, roundRGB);\n    g = roundStep(g, roundRGB);\n    b = roundStep(b, roundRGB);\n    data[i] = a << 24 | b << 16 | g << 8 | r << 0;\n  }\n}\nfunction applyPalette(rgba, palette, format = \"rgb565\") {\n  if (!rgba || !rgba.buffer) {\n    throw new Error(\"quantize() expected RGBA Uint8Array data\");\n  }\n  if (!(rgba instanceof Uint8Array) && !(rgba instanceof Uint8ClampedArray)) {\n    throw new Error(\"quantize() expected RGBA Uint8Array data\");\n  }\n  if (palette.length > 256) {\n    throw new Error(\"applyPalette() only works with 256 colors or less\");\n  }\n  const data = new Uint32Array(rgba.buffer);\n  const length = data.length;\n  const bincount = format === \"rgb444\" ? 4096 : 65536;\n  const index = new Uint8Array(length);\n  const cache = new Array(bincount);\n  const hasAlpha = format === \"rgba4444\";\n  if (format === \"rgba4444\") {\n    for (let i = 0; i < length; i++) {\n      const color = data[i];\n      const a = color >> 24 & 255;\n      const b = color >> 16 & 255;\n      const g = color >> 8 & 255;\n      const r = color & 255;\n      const key = rgba8888_to_rgba4444(r, g, b, a);\n      const idx = key in cache ? cache[key] : cache[key] = nearestColorIndexRGBA(r, g, b, a, palette);\n      index[i] = idx;\n    }\n  } else {\n    const rgb888_to_key = format === \"rgb444\" ? rgb888_to_rgb444 : rgb888_to_rgb565;\n    for (let i = 0; i < length; i++) {\n      const color = data[i];\n      const b = color >> 16 & 255;\n      const g = color >> 8 & 255;\n      const r = color & 255;\n      const key = rgb888_to_key(r, g, b);\n      const idx = key in cache ? cache[key] : cache[key] = nearestColorIndexRGB(r, g, b, palette);\n      index[i] = idx;\n    }\n  }\n  return index;\n}\nfunction nearestColorIndexRGBA(r, g, b, a, palette) {\n  let k = 0;\n  let mindist = 1e100;\n  for (let i = 0; i < palette.length; i++) {\n    const px2 = palette[i];\n    const a2 = px2[3];\n    let curdist = sqr2(a2 - a);\n    if (curdist > mindist)\n      continue;\n    const r2 = px2[0];\n    curdist += sqr2(r2 - r);\n    if (curdist > mindist)\n      continue;\n    const g2 = px2[1];\n    curdist += sqr2(g2 - g);\n    if (curdist > mindist)\n      continue;\n    const b2 = px2[2];\n    curdist += sqr2(b2 - b);\n    if (curdist > mindist)\n      continue;\n    mindist = curdist;\n    k = i;\n  }\n  return k;\n}\nfunction nearestColorIndexRGB(r, g, b, palette) {\n  let k = 0;\n  let mindist = 1e100;\n  for (let i = 0; i < palette.length; i++) {\n    const px2 = palette[i];\n    const r2 = px2[0];\n    let curdist = sqr2(r2 - r);\n    if (curdist > mindist)\n      continue;\n    const g2 = px2[1];\n    curdist += sqr2(g2 - g);\n    if (curdist > mindist)\n      continue;\n    const b2 = px2[2];\n    curdist += sqr2(b2 - b);\n    if (curdist > mindist)\n      continue;\n    mindist = curdist;\n    k = i;\n  }\n  return k;\n}\nfunction snapColorsToPalette(palette, knownColors, threshold = 5) {\n  if (!palette.length || !knownColors.length)\n    return;\n  const paletteRGB = palette.map((p) => p.slice(0, 3));\n  const thresholdSq = threshold * threshold;\n  const dim = palette[0].length;\n  for (let i = 0; i < knownColors.length; i++) {\n    let color = knownColors[i];\n    if (color.length < dim) {\n      color = [color[0], color[1], color[2], 255];\n    } else if (color.length > dim) {\n      color = color.slice(0, 3);\n    } else {\n      color = color.slice();\n    }\n    const r = nearestColorIndexWithDistance(paletteRGB, color.slice(0, 3), euclideanDistanceSquared);\n    const idx = r[0];\n    const distanceSq = r[1];\n    if (distanceSq > 0 && distanceSq <= thresholdSq) {\n      palette[idx] = color;\n    }\n  }\n}\nfunction sqr2(a) {\n  return a * a;\n}\nfunction nearestColorIndex(colors, pixel, distanceFn = euclideanDistanceSquared) {\n  let minDist = Infinity;\n  let minDistIndex = -1;\n  for (let j = 0; j < colors.length; j++) {\n    const paletteColor = colors[j];\n    const dist = distanceFn(pixel, paletteColor);\n    if (dist < minDist) {\n      minDist = dist;\n      minDistIndex = j;\n    }\n  }\n  return minDistIndex;\n}\nfunction nearestColorIndexWithDistance(colors, pixel, distanceFn = euclideanDistanceSquared) {\n  let minDist = Infinity;\n  let minDistIndex = -1;\n  for (let j = 0; j < colors.length; j++) {\n    const paletteColor = colors[j];\n    const dist = distanceFn(pixel, paletteColor);\n    if (dist < minDist) {\n      minDist = dist;\n      minDistIndex = j;\n    }\n  }\n  return [minDistIndex, minDist];\n}\nfunction nearestColor(colors, pixel, distanceFn = euclideanDistanceSquared) {\n  return colors[nearestColorIndex(colors, pixel, distanceFn)];\n}\n\n// src/index.js\nfunction GIFEncoder(opt = {}) {\n  const {initialCapacity = 4096, auto = true} = opt;\n  const stream = createStream(initialCapacity);\n  const HSIZE = 5003;\n  const accum = new Uint8Array(256);\n  const htab = new Int32Array(HSIZE);\n  const codetab = new Int32Array(HSIZE);\n  let hasInit = false;\n  return {\n    reset() {\n      stream.reset();\n      hasInit = false;\n    },\n    finish() {\n      stream.writeByte(constants_default.trailer);\n    },\n    bytes() {\n      return stream.bytes();\n    },\n    bytesView() {\n      return stream.bytesView();\n    },\n    get buffer() {\n      return stream.buffer;\n    },\n    get stream() {\n      return stream;\n    },\n    writeHeader,\n    writeFrame(index, width, height, opts = {}) {\n      const {\n        transparent = false,\n        transparentIndex = 0,\n        delay = 0,\n        palette = null,\n        repeat = 0,\n        colorDepth = 8,\n        dispose = -1\n      } = opts;\n      let first = false;\n      if (auto) {\n        if (!hasInit) {\n          first = true;\n          writeHeader();\n          hasInit = true;\n        }\n      } else {\n        first = Boolean(opts.first);\n      }\n      width = Math.max(0, Math.floor(width));\n      height = Math.max(0, Math.floor(height));\n      if (first) {\n        if (!palette) {\n          throw new Error(\"First frame must include a { palette } option\");\n        }\n        encodeLogicalScreenDescriptor(stream, width, height, palette, colorDepth);\n        encodeColorTable(stream, palette);\n        if (repeat >= 0) {\n          encodeNetscapeExt(stream, repeat);\n        }\n      }\n      const delayTime = Math.round(delay / 10);\n      encodeGraphicControlExt(stream, dispose, delayTime, transparent, transparentIndex);\n      const useLocalColorTable = Boolean(palette) && !first;\n      encodeImageDescriptor(stream, width, height, useLocalColorTable ? palette : null);\n      if (useLocalColorTable)\n        encodeColorTable(stream, palette);\n      encodePixels(stream, index, width, height, colorDepth, accum, htab, codetab);\n    }\n  };\n  function writeHeader() {\n    writeUTFBytes(stream, \"GIF89a\");\n  }\n}\nfunction encodeGraphicControlExt(stream, dispose, delay, transparent, transparentIndex) {\n  stream.writeByte(33);\n  stream.writeByte(249);\n  stream.writeByte(4);\n  if (transparentIndex < 0) {\n    transparentIndex = 0;\n    transparent = false;\n  }\n  var transp, disp;\n  if (!transparent) {\n    transp = 0;\n    disp = 0;\n  } else {\n    transp = 1;\n    disp = 2;\n  }\n  if (dispose >= 0) {\n    disp = dispose & 7;\n  }\n  disp <<= 2;\n  const userInput = 0;\n  stream.writeByte(0 | disp | userInput | transp);\n  writeUInt16(stream, delay);\n  stream.writeByte(transparentIndex || 0);\n  stream.writeByte(0);\n}\nfunction encodeLogicalScreenDescriptor(stream, width, height, palette, colorDepth = 8) {\n  const globalColorTableFlag = 1;\n  const sortFlag = 0;\n  const globalColorTableSize = colorTableSize(palette.length) - 1;\n  const fields = globalColorTableFlag << 7 | colorDepth - 1 << 4 | sortFlag << 3 | globalColorTableSize;\n  const backgroundColorIndex = 0;\n  const pixelAspectRatio = 0;\n  writeUInt16(stream, width);\n  writeUInt16(stream, height);\n  stream.writeBytes([fields, backgroundColorIndex, pixelAspectRatio]);\n}\nfunction encodeNetscapeExt(stream, repeat) {\n  stream.writeByte(33);\n  stream.writeByte(255);\n  stream.writeByte(11);\n  writeUTFBytes(stream, \"NETSCAPE2.0\");\n  stream.writeByte(3);\n  stream.writeByte(1);\n  writeUInt16(stream, repeat);\n  stream.writeByte(0);\n}\nfunction encodeColorTable(stream, palette) {\n  const colorTableLength = 1 << colorTableSize(palette.length);\n  for (let i = 0; i < colorTableLength; i++) {\n    let color = [0, 0, 0];\n    if (i < palette.length) {\n      color = palette[i];\n    }\n    stream.writeByte(color[0]);\n    stream.writeByte(color[1]);\n    stream.writeByte(color[2]);\n  }\n}\nfunction encodeImageDescriptor(stream, width, height, localPalette) {\n  stream.writeByte(44);\n  writeUInt16(stream, 0);\n  writeUInt16(stream, 0);\n  writeUInt16(stream, width);\n  writeUInt16(stream, height);\n  if (localPalette) {\n    const interlace = 0;\n    const sorted = 0;\n    const palSize = colorTableSize(localPalette.length) - 1;\n    stream.writeByte(128 | interlace | sorted | 0 | palSize);\n  } else {\n    stream.writeByte(0);\n  }\n}\nfunction encodePixels(stream, index, width, height, colorDepth = 8, accum, htab, codetab) {\n  lzwEncode_default(width, height, index, colorDepth, stream, accum, htab, codetab);\n}\nfunction writeUInt16(stream, short) {\n  stream.writeByte(short & 255);\n  stream.writeByte(short >> 8 & 255);\n}\nfunction writeUTFBytes(stream, text) {\n  for (var i = 0; i < text.length; i++) {\n    stream.writeByte(text.charCodeAt(i));\n  }\n}\nfunction colorTableSize(length) {\n  return Math.max(Math.ceil(Math.log2(length)), 1);\n}\nvar src_default = GIFEncoder;\n//# sourceMappingURL=gifenc.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { GIFEncoder, quantize, applyPalette } from \"gifenc\";\n\n// eslint-disable-next-line no-restricted-globals, @typescript-eslint/no-explicit-any\nconst ctx: Worker = self as any;\n\nconst encoder = GIFEncoder();\n\nctx.addEventListener(\"message\", (msg) => {\n  if (msg.data.addFrame) {\n    const { data, transparent, width, height, delay } = msg.data.addFrame;\n    const palette = quantize(data, 256, { oneBitAlpha: transparent });\n    const index = applyPalette(data, palette);\n    encoder.writeFrame(index, width, height, { palette, delay, transparent });\n  } else if (msg.data.finish) {\n    encoder.finish();\n    ctx.postMessage(new Blob([encoder.bytes()], { type: \"image/gif\" }));\n  }\n});\n"],"names":["__defProp","Object","defineProperty","exports","value","target","all","name","get","enumerable","__export","GIFEncoder","applyPalette","default","src_default","nearestColor","nearestColorIndex","nearestColorIndexWithDistance","prequantize","quantize","snapColorsToPalette","constants_default","signature","version","trailer","extensionIntroducer","applicationExtensionLabel","graphicControlExtensionLabel","imageSeparator","signatureSize","versionSize","globalColorTableFlagMask","colorResolutionMask","sortFlagMask","globalColorTableSizeMask","applicationIdentifierSize","applicationAuthCodeSize","disposalMethodMask","userInputFlagMask","transparentColorFlagMask","localColorTableFlagMask","interlaceFlagMask","idSortFlagMask","localColorTableSizeMask","createStream","initialCapacity","cursor","contents","Uint8Array","buffer","reset","bytesView","subarray","bytes","slice","writeByte","byte","expand","writeBytes","data","offset","byteLength","length","i","writeBytesView","set","newCapacity","prevCapacity","Math","max","oldContents","BITS","MASKS","lzwEncode_default","width","height","pixels","colorDepth","outStream","accum","htab","Int32Array","codetab","hsize","initCodeSize","fill","cur_accum","cur_bits","init_bits","g_init_bits","clear_flg","n_bits","maxcode","ClearCode","EOFCode","free_ent","a_count","ent","hshift","fcode","output","idx","next_block","c","disp","code","rgb888_to_rgb565","r","g","b","rgba8888_to_rgba4444","a","rgb888_to_rgb444","clamp","min","sqr","find_nn","bins","hasAlpha","nn","err","bin1","n1","cnt","wa","ac","wr","rc","wg","gc","wb","bc","fw","bin","n2","nerr2","nerr","rgba","maxColors","opts","format","clearAlpha","clearAlphaColor","clearAlphaThreshold","oneBitAlpha","Error","Uint8ClampedArray","Uint32Array","useSqrt","Array","size","color","index","bk","tm","mtm","create_bin_list","bincount","bincountMinusOne","heap","maxbins","d","h","l","l2","sqrt","extbins","tb","b1","nb","palette","k","round","existsInPalette","push","p","matchesRGB","matchesAlpha","euclideanDistanceSquared","n","sum","dx","roundStep","step","roundRGB","roundAlpha","cache","key","nearestColorIndexRGBA","rgb888_to_key","nearestColorIndexRGB","mindist","px2","curdist","sqr2","knownColors","threshold","paletteRGB","map","thresholdSq","dim","distanceSq","colors","pixel","distanceFn","minDist","Infinity","minDistIndex","j","dist","opt","auto","stream","hasInit","finish","writeHeader","writeFrame","transparent","transparentIndex","delay","repeat","dispose","first","Boolean","floor","fields","globalColorTableFlag","colorTableSize","writeUInt16","encodeLogicalScreenDescriptor","encodeColorTable","writeUTFBytes","encodeNetscapeExt","delayTime","transp","encodeGraphicControlExt","useLocalColorTable","localPalette","interlace","sorted","palSize","encodeImageDescriptor","encodePixels","colorTableLength","short","text","charCodeAt","ceil","log2","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__","getter","__esModule","definition","o","obj","prop","prototype","hasOwnProperty","call","ctx","self","encoder","addEventListener","msg","addFrame","postMessage","Blob","type"],"sourceRoot":""}